// Mocks generated by Mockito 5.4.6 from annotations
// in agua_viva/test/integration/app_flow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i12;
import 'dart:typed_data' as _i13;
import 'dart:ui' as _i6;

import 'package:agua_viva/models/assessment_model.dart' as _i2;
import 'package:agua_viva/models/spring_model.dart' as _i8;
import 'package:agua_viva/services/api_service.dart' as _i10;
import 'package:agua_viva/services/assessment_service.dart' as _i7;
import 'package:agua_viva/services/auth_service.dart' as _i4;
import 'package:agua_viva/services/location_service.dart' as _i11;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSpringAssessment_0 extends _i1.SmartFake
    implements _i2.SpringAssessment {
  _FakeSpringAssessment_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_2 extends _i1.SmartFake
    implements _i3.StreamedResponse {
  _FakeStreamedResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i4.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
      ) as bool);

  @override
  _i5.Stream<bool> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i5.Stream<bool>.empty(),
      ) as _i5.Stream<bool>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<bool> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> signInProprietario(
    String? email,
    String? senha,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInProprietario,
          [
            email,
            senha,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AssessmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssessmentService extends _i1.Mock implements _i7.AssessmentService {
  MockAssessmentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<List<_i8.Spring>> get springsStream => (super.noSuchMethod(
        Invocation.getter(#springsStream),
        returnValue: _i5.Stream<List<_i8.Spring>>.empty(),
      ) as _i5.Stream<List<_i8.Spring>>);

  @override
  _i5.Stream<List<_i2.SpringAssessment>> get assessmentsStream =>
      (super.noSuchMethod(
        Invocation.getter(#assessmentsStream),
        returnValue: _i5.Stream<List<_i2.SpringAssessment>>.empty(),
      ) as _i5.Stream<List<_i2.SpringAssessment>>);

  @override
  _i5.Future<void> syncOfflineData() => (super.noSuchMethod(
        Invocation.method(
          #syncOfflineData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.SpringAssessment> createAssessment(
          Map<String, dynamic>? assessmentData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAssessment,
          [assessmentData],
        ),
        returnValue:
            _i5.Future<_i2.SpringAssessment>.value(_FakeSpringAssessment_0(
          this,
          Invocation.method(
            #createAssessment,
            [assessmentData],
          ),
        )),
      ) as _i5.Future<_i2.SpringAssessment>);

  @override
  _i5.Future<String> saveAssessment(_i2.SpringAssessment? assessment) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAssessment,
          [assessment],
        ),
        returnValue: _i5.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #saveAssessment,
            [assessment],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> uploadPhoto(
    String? filePath,
    String? photoPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPhoto,
          [
            filePath,
            photoPath,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.SpringAssessment?> getAssessmentById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssessmentById,
          [id],
        ),
        returnValue: _i5.Future<_i2.SpringAssessment?>.value(),
      ) as _i5.Future<_i2.SpringAssessment?>);

  @override
  _i5.Future<List<_i2.SpringAssessment>> getAssessmentsByOwnerCpf(
          String? cpf) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssessmentsByOwnerCpf,
          [cpf],
        ),
        returnValue: _i5.Future<List<_i2.SpringAssessment>>.value(
            <_i2.SpringAssessment>[]),
      ) as _i5.Future<List<_i2.SpringAssessment>>);

  @override
  _i5.Future<List<_i2.SpringAssessment>> getAllAssessments() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllAssessments,
          [],
        ),
        returnValue: _i5.Future<List<_i2.SpringAssessment>>.value(
            <_i2.SpringAssessment>[]),
      ) as _i5.Future<List<_i2.SpringAssessment>>);

  @override
  _i5.Future<_i2.SpringAssessment> updateAssessment(
    String? id,
    Map<String, dynamic>? assessmentData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAssessment,
          [
            id,
            assessmentData,
          ],
        ),
        returnValue:
            _i5.Future<_i2.SpringAssessment>.value(_FakeSpringAssessment_0(
          this,
          Invocation.method(
            #updateAssessment,
            [
              id,
              assessmentData,
            ],
          ),
        )),
      ) as _i5.Future<_i2.SpringAssessment>);

  @override
  _i5.Future<void> deleteAssessment(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteAssessment,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateAssessmentStatus(
    String? id,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAssessmentStatus,
          [
            id,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i10.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i5.Future<bool> checkServerConnection() => (super.noSuchMethod(
        Invocation.method(
          #checkServerConnection,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<Map<String, dynamic>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<dynamic> get(String? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> post(
    String? endpoint,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            endpoint,
            data,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> put(
    String? endpoint,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            endpoint,
            data,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<void> delete(String? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> createUser(Map<String, dynamic>? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [userData],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> getUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [id],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> createSpring(
          Map<String, dynamic>? springData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSpring,
          [springData],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getSprings() => (super.noSuchMethod(
        Invocation.method(
          #getSprings,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Map<String, dynamic>> getSpring(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getSpring,
          [id],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> updateSpring(
    String? id,
    Map<String, dynamic>? springData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSpring,
          [
            id,
            springData,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> deleteSpring(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSpring,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getSpringsByOwner(String? ownerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSpringsByOwner,
          [ownerId],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getAssessments() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssessments,
          [],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Map<String, dynamic>> createAssessment(
          Map<String, dynamic>? assessmentData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAssessment,
          [assessmentData],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> getAssessment(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssessment,
          [id],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> updateAssessment(
    String? id,
    Map<String, dynamic>? assessmentData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAssessment,
          [
            id,
            assessmentData,
          ],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i11.LocationService {
  MockLocationService() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i3.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<_i3.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);

  @override
  _i5.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i13.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i13.Uint8List>.value(_i13.Uint8List(0)),
      ) as _i5.Future<_i13.Uint8List>);

  @override
  _i5.Future<_i3.StreamedResponse> send(_i3.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_2(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
